apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: sc-faiss-{{ .Values.image.prefix }}
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-faiss-{{ .Values.image.prefix }}
spec:
  storageClassName: sc-faiss-{{ .Values.image.prefix }}
  capacity:
    storage: {{ .Values.image.storage }}Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: default
    name: pvc-faiss-{{ .Values.image.prefix }}
  gcePersistentDisk:
    pdName: {{ .Values.image.pdName }}
    fsType: ext4
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-faiss-{{ .Values.image.prefix }}
spec:
  storageClassName: sc-faiss-{{ .Values.image.prefix }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.image.storage }}Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "faiss-grpc-server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "faiss-grpc-server.name" . }}
    chart: {{ template "faiss-grpc-server.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "faiss-grpc-server.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "faiss-grpc-server.name" . }}
        release: {{ .Release.Name }}

    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.imageName }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          {{- if .Values.image.numGpus }}
          command: ["./faiss_server", "-file_path=/data/{{ .Values.image.indexName }}", "-nprobe={{ .Values.image.nprobe }}", "-port={{ .Values.image.grpcPort }}"]
          {{- else }}
          command: ["./faiss_server", "-file_path=/data/{{ .Values.image.indexName }}", "-nprobe={{ .Values.image.nprobe }}", "-on_cpu", "-port={{ .Values.image.grpcPort }}"]
          {{- end }}
          

          volumeMounts:
            - name: data
              mountPath: /data
              readOnly: true

          resources:
            limits:
              nvidia.com/gpu: {{ .Values.image.numGpus }}
          
          ports:
            - containerPort: {{ .Values.image.grpcPort }}
              name: grpc
            - containerPort: 8000
              name: metrics
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:{{ .Values.image.grpcPort }}"]
            initialDelaySeconds: 1500
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:{{ .Values.image.grpcPort }}"]
            initialDelaySeconds: 1500

      initContainers:
        - name: download
          image: jplu/gsutil:1.0.0
          command: ["gsutil", "-m", "rsync", "{{ .Values.image.bucketPath }}", "/data"]
          volumeMounts:
            - name: data
              mountPath: /data

      serviceAccountName: iden-k8s-gcs-access-{{ .Values.image.prefix }}

      securityContext:
        runAsUser: 1000
        fsGroup: 1000

      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: pvc-faiss-{{ .Values.image.prefix }}

      nodeSelector:
        cloud.google.com/gke-nodepool: pool-faissserver

