apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: eck-storage-master-{{ .Values.image.prefix }}
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: eck-storage-data-{{ .Values.image.prefix }}
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  finalizers:
  - kubernetes.io/pv-protection
  name: elasticsearch-data-0-{{ .Values.image.prefix }}
spec:
  storageClassName: eck-storage-master-{{ .Values.image.prefix }}
  capacity:
    storage: {{ .Values.image.storage }}Gi
  accessModes:
  - ReadWriteOnce
  gcePersistentDisk:
    pdName: {{ .Values.image.pdNameMaster }}
    fsType: ext4
---
apiVersion: v1
kind: PersistentVolume
metadata:
  finalizers:
  - kubernetes.io/pv-protection
  name: elasticsearch-data-1-{{ .Values.image.prefix }}
spec:
  storageClassName: eck-storage-data-{{ .Values.image.prefix }}
  capacity:
    storage: {{ .Values.image.storage }}Gi
  accessModes:
  - ReadWriteOnce
  gcePersistentDisk:
    pdName: {{ .Values.image.pdNameData }}
    fsType: ext4
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: es-cluster
spec:
  version: 7.14.0
  nodeSets:
  - name: master-node
    count: 1
    config:
      node.roles: ["master", "data"]
      node.store.allow_mmap: false
      node.attr.temp: hot
    volumeClaimTemplates:
    - metadata: 
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.image.storage }}Gi
        storageClassName: eck-storage-master-{{ .Values.image.prefix }}
    podTemplate:
      spec:
        nodeSelector:
          cloud.google.com/gke-nodepool: pool-elasticsearch
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        #- name: install-plugins
        #  command:
        #  - sh
        #  - -c
        #  - |
        #    bin/elasticsearch-plugin install --batch repository-gcs
        #- name: add-gcs-key
        #  command:
        #  - sh
        #  - -c
        #  - |
        #    echo y | bin/elasticsearch-keystore add-file gcs.client.default.credentials_file ./key/eck-creds.json
        #  volumeMounts:
        #  - name: eck-gcs-credentials
        #    mountPath: "/usr/share/elasticsearch/key"
        #    readOnly: true
        - name: chown-data-volumes
          command: ["sh", "-c", "chown elasticsearch:elasticsearch /usr/share/elasticsearch/data"]
        #volumes:
        #- name: eck-gcs-credentials
        #  secret:
        #    secretName: eck-gcs-credentials
  - name: data-node
    count: 1
    config:
      node.roles: ["data"]
      node.store.allow_mmap: false
      node.attr.temp: warm
    volumeClaimTemplates:
    - metadata: 
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.image.storage }}Gi
        storageClassName: eck-storage-data-{{ .Values.image.prefix }}
    podTemplate:
      spec:
        nodeSelector:
          cloud.google.com/gke-nodepool: pool-elasticsearch
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        #- name: install-plugins
        #  command:
        #  - sh
        #  - -c
        #  - |
        #    bin/elasticsearch-plugin install --batch repository-gcs
        #- name: add-gcs-key
        #  command:
        #  - sh
        #  - -c
        #  - |
        #    echo y | bin/elasticsearch-keystore add-file gcs.client.default.credentials_file ./key/eck-creds.json
        #  volumeMounts:
        #  - name: eck-gcs-credentials
        #    mountPath: "/usr/share/elasticsearch/key"
        #    readOnly: true
        - name: chown-data-volumes
          command: ["sh", "-c", "chown elasticsearch:elasticsearch /usr/share/elasticsearch/data"]
        #volumes:
        #- name: eck-gcs-credentials
        #  secret:
        #    secretName: eck-gcs-credentials
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
spec:
  version: 7.14.0
  count: 1
  elasticsearchRef:
    name: es-cluster
